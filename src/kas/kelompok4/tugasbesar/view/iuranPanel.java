/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kas.kelompok4.tugasbesar.view;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import kas.kelompok4.tugasbesar.controller.IuranController;
import kas.kelompok4.tugasbesar.model.TableIuranModel;
import kas.kelompok4.tugasbesar.database.maskasDatabase;
import kas.kelompok4.tugasbesar.entity.Iuran;
import kas.kelompok4.tugasbesar.error.MaskasException;
import kas.kelompok4.tugasbesar.event.IuranListener;
import kas.kelompok4.tugasbesar.model.IuranModel;
import kas.kelompok4.tugasbesar.service.IuranDao;

/**
 *
 * @author Star Ramadhan
 */
public class iuranPanel extends javax.swing.JPanel implements IuranListener, ListSelectionListener {

    private final TableIuranModel tabelModel;
    private IuranModel model;
    private IuranController controller;

    /**
     * Creates new form iuranPanel
     *
     * @throws java.sql.SQLException
     */
    public iuranPanel() throws SQLException {
        tabelModel = new TableIuranModel();

        model = new IuranModel();
        model.setListener(this);

        controller = new IuranController();
        controller.setModel(model);

        initComponents();
        tableIuran.getSelectionModel().addListSelectionListener(this);
        tableIuran.setModel(tabelModel);
        comboAlamat();
        txtNominal.setText(20000 + "");
        txtNominal.setEnabled(false);
    }

    public void comboAlamat() throws SQLException {
        Connection conn = maskasDatabase.getConnection();
        String sql = "select * from tablewarga";
        try {
            Statement stat = conn.createStatement();
            ResultSet rs = stat.executeQuery(sql);
            while (rs.next()) {
                cmbNoRumah.addItem(rs.getString("no_rumah"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Terjadi Kesalahan" + e);
        }
    }

    public JComboBox getCmbNoRumah() {
        return cmbNoRumah;
    }

    public JTable getTableIuran() {
        return tableIuran;
    }

    public JTextField getTxtNoIuran() {
        return txtNoIuran;
    }

    public JTextField getTxtNominal() {
        return txtNominal;
    }

    public JCheckBox getCbAgs() {
        return cbAgs;
    }

    public JCheckBox getCbApr() {
        return cbApr;
    }

    public JCheckBox getCbDes() {
        return cbDes;
    }

    public JCheckBox getCbFeb() {
        return cbFeb;
    }

    public JCheckBox getCbJan() {
        return cbJan;
    }

    public JCheckBox getCbJul() {
        return cbJul;
    }

    public JCheckBox getCbJun() {
        return cbJun;
    }

    public JCheckBox getCbMar() {
        return cbMar;
    }

    public JCheckBox getCbMei() {
        return cbMei;
    }

    public JCheckBox getCbNov() {
        return cbNov;
    }

    public JCheckBox getCbOkt() {
        return cbOkt;
    }

    public JCheckBox getCbSept() {
        return cbSept;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel10 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableIuran = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        txtNoIuran = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        cmbNoRumah = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        txtNominal = new javax.swing.JTextField();
        rdNominal = new javax.swing.JRadioButton();
        btnHapus = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnUlang = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        cbDes = new javax.swing.JCheckBox();
        cbJan = new javax.swing.JCheckBox();
        cbFeb = new javax.swing.JCheckBox();
        cbMar = new javax.swing.JCheckBox();
        cbApr = new javax.swing.JCheckBox();
        cbMei = new javax.swing.JCheckBox();
        cbJun = new javax.swing.JCheckBox();
        cbJul = new javax.swing.JCheckBox();
        cbAgs = new javax.swing.JCheckBox();
        cbSept = new javax.swing.JCheckBox();
        cbOkt = new javax.swing.JCheckBox();
        cbNov = new javax.swing.JCheckBox();
        btnExport = new javax.swing.JButton();
        btnUbah2 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(956, 441));
        setLayout(new java.awt.CardLayout());

        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        jLabel4.setText("Data Iuran");
        jPanel10.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        tableIuran.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tableIuran);

        jPanel10.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 1040, 280));

        jLabel11.setText("No Iuran");
        jPanel10.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, -1, -1));

        txtNoIuran.setEnabled(false);
        jPanel10.add(txtNoIuran, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 110, -1));

        jLabel17.setText("No Rumah");
        jPanel10.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, -1, -1));

        cmbNoRumah.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "~ Pilih ~" }));
        jPanel10.add(cmbNoRumah, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, 110, -1));

        jLabel18.setText("Nominal");
        jPanel10.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, -1, -1));

        txtNominal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNominalActionPerformed(evt);
            }
        });
        txtNominal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNominalKeyTyped(evt);
            }
        });
        jPanel10.add(txtNominal, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 50, 110, -1));

        rdNominal.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        rdNominal.setText("Ubah Nominal");
        rdNominal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdNominalActionPerformed(evt);
            }
        });
        jPanel10.add(rdNominal, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 50, -1, 20));

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        jPanel10.add(btnHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 160, 70, -1));

        btnSimpan.setText("Tambah");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        jPanel10.add(btnSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 100, 70, -1));

        btnUlang.setText("Ulang");
        btnUlang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUlangActionPerformed(evt);
            }
        });
        jPanel10.add(btnUlang, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 120, 70, -1));
        jPanel10.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 82, 840, 10));

        cbDes.setText("Desember");
        jPanel10.add(cbDes, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 160, -1, -1));

        cbJan.setText("Januari");
        jPanel10.add(cbJan, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, -1, -1));

        cbFeb.setText("Februari");
        jPanel10.add(cbFeb, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, -1, -1));

        cbMar.setText("Maret");
        jPanel10.add(cbMar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, -1, -1));

        cbApr.setText("April");
        jPanel10.add(cbApr, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, -1, -1));

        cbMei.setText("Mei");
        jPanel10.add(cbMei, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, -1, -1));

        cbJun.setText("Juni");
        jPanel10.add(cbJun, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 160, -1, -1));

        cbJul.setText("Juli");
        jPanel10.add(cbJul, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, -1, -1));

        cbAgs.setText("Agustus");
        jPanel10.add(cbAgs, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 130, -1, -1));

        cbSept.setText("September");
        jPanel10.add(cbSept, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 160, -1, -1));

        cbOkt.setText("Oktober");
        jPanel10.add(cbOkt, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, -1, -1));

        cbNov.setText("November");
        jPanel10.add(cbNov, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, -1, -1));

        btnExport.setText("Simpan");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });
        jPanel10.add(btnExport, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 180, 70, -1));

        btnUbah2.setText("Export");
        btnUbah2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbah2ActionPerformed(evt);
            }
        });
        jPanel10.add(btnUbah2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 140, 70, -1));

        add(jPanel10, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void rdNominalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdNominalActionPerformed
        // TODO add your handling code here:
        if (rdNominal.isSelected() == true) {
            txtNominal.setEnabled(true);
            txtNominal.setText("20000");
        } else if (rdNominal.isSelected() == false) {
            txtNominal.setText("20000");
            txtNominal.setEnabled(false);
        }
    }//GEN-LAST:event_rdNominalActionPerformed

    private void btnUlangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUlangActionPerformed
        // TODO add your handling code here:
        controller.resetIuran(this);
    }//GEN-LAST:event_btnUlangActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        try {
            // TODO add your handling code here:
            controller.insertIuran(this);
        } catch (SQLException ex) {
            Logger.getLogger(iuranPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MaskasException ex) {
            Logger.getLogger(iuranPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        controller.deleteIuran(this);
    }//GEN-LAST:event_btnHapusActionPerformed

    private void txtNominalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNominalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNominalActionPerformed

    private void txtNominalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNominalKeyTyped
        char karakter = evt.getKeyChar();
        if (!(((karakter >= '0') && (karakter <= '9') || (karakter == KeyEvent.VK_BACK_SPACE) || (karakter == KeyEvent.VK_DELETE)))) {
            getToolkit().beep();
            evt.consume();        // TODO add your handling code here:
    }//GEN-LAST:event_txtNominalKeyTyped
    }
    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        try {
            // TODO add your handling code here:
            controller.updateIuran(this);
        } catch (SQLException ex) {
            Logger.getLogger(iuranPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MaskasException ex) {
            Logger.getLogger(iuranPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnExportActionPerformed

    private void btnUbah2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbah2ActionPerformed
        // TODO add your handling code here:
        controller.export(this);
    }//GEN-LAST:event_btnUbah2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah2;
    private javax.swing.JButton btnUlang;
    private javax.swing.JCheckBox cbAgs;
    private javax.swing.JCheckBox cbApr;
    private javax.swing.JCheckBox cbDes;
    private javax.swing.JCheckBox cbFeb;
    private javax.swing.JCheckBox cbJan;
    private javax.swing.JCheckBox cbJul;
    private javax.swing.JCheckBox cbJun;
    private javax.swing.JCheckBox cbMar;
    private javax.swing.JCheckBox cbMei;
    private javax.swing.JCheckBox cbNov;
    private javax.swing.JCheckBox cbOkt;
    private javax.swing.JCheckBox cbSept;
    private javax.swing.JComboBox cmbNoRumah;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton rdNominal;
    private javax.swing.JTable tableIuran;
    private javax.swing.JTextField txtNoIuran;
    private javax.swing.JTextField txtNominal;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onChangeIuran(IuranModel model) {
        txtNoIuran.setText(model.getNo_iuran() + "");
        cmbNoRumah.setSelectedItem(model.getNo_rumah());
        if (model.getJan() != 0) {
            cbJan.setSelected(true);
        }
        if (model.getFeb() != 0) {
            cbFeb.setSelected(true);
        }
        if (model.getMar() != 0) {
            cbMar.setSelected(true);
        }
        if (model.getApr() != 0) {
            cbApr.setSelected(true);
        }
        if (model.getMei() != 0) {
            cbMei.setSelected(true);
        }
        if (model.getJun() != 0) {
            cbJun.setSelected(true);
        }
        if (model.getJul() != 0) {
            cbJul.setSelected(true);
        }
        if (model.getAgs() != 0) {
            cbAgs.setSelected(true);
        }
        if (model.getSept() != 0) {
            cbSept.setSelected(true);
        }
        if (model.getOkt() != 0) {
            cbOkt.setSelected(true);
        }
        if (model.getNov() != 0) {
            cbNov.setSelected(true);
        }
        if (model.getDes() != 0) {
            cbDes.setSelected(true);
        }

    }

    @Override
    public void onInsertIuran(Iuran iuran) {
        tabelModel.add(iuran);
    }

    @Override
    public void onDeleteIuran() {
        int index = tableIuran.getSelectedRow();
        tabelModel.remove(index);
    }

    @Override
    public void onUpdateIuran(Iuran iuran) {
        int index = tableIuran.getSelectedRow();
        tabelModel.set(index, iuran);
    }

    @Override
    public void valueChanged(ListSelectionEvent e) {
        try {
            Iuran model = tabelModel.get(tableIuran.getSelectedRow());
            txtNoIuran.setText(model.getNo_iuran() + "");
            cmbNoRumah.setSelectedItem(model.getNo_rumah());
            if (model.getJan() != 0) {
                cbJan.setSelected(true);
            } else {
                cbJan.setSelected(false);
            }

            if (model.getFeb() != 0) {
                cbFeb.setSelected(true);
            } else {
                cbFeb.setSelected(false);
            }

            if (model.getMar() != 0) {
                cbMar.setSelected(true);
            } else {
                cbMar.setSelected(false);
            }

            if (model.getApr() != 0) {
                cbApr.setSelected(true);
            } else {
                cbApr.setSelected(false);
            }

            if (model.getMei() != 0) {
                cbMei.setSelected(true);
            } else {
                cbMei.setSelected(false);
            }

            if (model.getJun() != 0) {
                cbJun.setSelected(true);
            } else {
                cbJun.setSelected(false);
            }

            if (model.getJul() != 0) {
                cbJul.setSelected(true);
            } else {
                cbJul.setSelected(false);
            }

            if (model.getAgs() != 0) {
                cbAgs.setSelected(true);
            } else {
                cbAgs.setSelected(false);
            }

            if (model.getSept() != 0) {
                cbSept.setSelected(true);
            } else {
                cbSept.setSelected(false);
            }

            if (model.getOkt() != 0) {
                cbOkt.setSelected(true);
            } else {
                cbOkt.setSelected(false);
            }

            if (model.getNov() != 0) {
                cbNov.setSelected(true);
            } else {
                cbNov.setSelected(false);
            }

            if (model.getDes() != 0) {
                cbDes.setSelected(true);
            } else {
                cbDes.setSelected(false);
            }
        } catch (IndexOutOfBoundsException exception) {
        }
    }

    public void loadTableIuran() throws SQLException, MaskasException {
        IuranDao dao = maskasDatabase.getIuranDao();
        tabelModel.setList(dao.selecAllIuran());
    }

}
